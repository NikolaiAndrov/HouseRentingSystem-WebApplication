@using HouseRentingSystem.Data.Models
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;
@using HouseRentingSystem.Services.Interfaces

@inject IAgentService AgentService;
@inject IUserService UserService;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
	string userId = this.User.FindFirstValue(ClaimTypes.NameIdentifier);
	bool isUserAgent = await this.AgentService.IsAgentExistingAsync(userId);
	string userFullName = await this.UserService.GetUserFullNameByEmailAsync(User.Identity?.Name ?? string.Empty);
}

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		<li class="nav-item">
			<a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userFullName!</a>
		</li>
		@if (!isUserAgent)
		{
			<li class="nav-item">
				<a class="nav-link text-white" asp-area="" asp-controller="Agent" asp-action="Become">Become Agents</a>
			</li>
		}
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-white">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-white" asp-area="" asp-controller="User" asp-action="Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-white" asp-area="" asp-controller="User" asp-action="Login">Login</a>
		</li>
	}
</ul>
